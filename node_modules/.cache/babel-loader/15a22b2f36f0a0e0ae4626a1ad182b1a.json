{"ast":null,"code":"import{configureStore}from\"@reduxjs/toolkit\";import{useSelector as rawUseSelector}from\"react-redux\";import itemReducer from'./redux/item/itemSlice';import cartReducer from'./redux/cart/cartSlice';export var store=configureStore({reducer:{items:itemReducer,cart:cartReducer},middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:false});}});export var useSelector=rawUseSelector;","map":{"version":3,"names":["configureStore","useSelector","rawUseSelector","itemReducer","cartReducer","store","reducer","items","cart","middleware","getDefaultMiddleware","serializableCheck"],"sources":["/Users/yonekawatakashinari/Desktop/js-practice/yone-ec-site/src/store.tsx"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { useSelector as rawUseSelector ,TypedUseSelectorHook } from \"react-redux\";\nimport itemReducer from './redux/item/itemSlice'\nimport cartReducer from './redux/cart/cartSlice'\n\n\nexport const store = configureStore({\n    reducer: {\n        items: itemReducer,\n        cart: cartReducer,\n    },\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n})\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>\nexport const useSelector: TypedUseSelectorHook<RootState> = rawUseSelector; "],"mappings":"AAAA,OAASA,cAAT,KAA+B,kBAA/B,CACA,OAASC,WAAW,GAAIC,eAAxB,KAAoE,aAApE,CACA,MAAOC,YAAP,KAAwB,wBAAxB,CACA,MAAOC,YAAP,KAAwB,wBAAxB,CAGA,MAAO,IAAMC,MAAK,CAAGL,cAAc,CAAC,CAChCM,OAAO,CAAE,CACLC,KAAK,CAAEJ,WADF,CAELK,IAAI,CAAEJ,WAFD,CADuB,CAKhCK,UAAU,CAAE,oBAACC,oBAAD,QACZA,qBAAoB,CAAC,CACnBC,iBAAiB,CAAE,KADA,CAAD,CADR,EALoB,CAAD,CAA5B,CAaP,MAAO,IAAMV,YAA4C,CAAGC,cAArD"},"metadata":{},"sourceType":"module"}