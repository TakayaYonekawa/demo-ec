{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { collection } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nconst cartCollectionRef = collection(db, 'cart');\nconst initialState = {\n  cartItems: cartCollectionRef\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addCart: (state, action) => {\n      console.log(cartCollectionRef);\n    }\n  }\n});\nexport const {\n  addCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","collection","db","cartCollectionRef","initialState","cartItems","cartSlice","name","reducers","addCart","state","action","console","log","actions","reducer"],"sources":["/Users/yonekawatakashinari/Desktop/js-practice/yone-ec-siteのコピー/src/redux/cart/cartSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport { collection } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\n\nconst cartCollectionRef = collection(db, 'cart');\n\n\nconst initialState = {\n    cartItems: cartCollectionRef,\n}\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        addCart:(state, action) => {\n            console.log(cartCollectionRef);\n        },\n    }\n})\n\n\nexport const {addCart} = cartSlice.actions\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AAEA,MAAMC,iBAAiB,GAAGF,UAAU,CAACC,EAAD,EAAK,MAAL,CAApC;AAGA,MAAME,YAAY,GAAG;EACjBC,SAAS,EAAEF;AADM,CAArB;AAIA,MAAMG,SAAS,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAE,MADoB;EAE1BH,YAF0B;EAG1BI,QAAQ,EAAE;IACNC,OAAO,EAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACvBC,OAAO,CAACC,GAAR,CAAYV,iBAAZ;IACH;EAHK;AAHgB,CAAD,CAA7B;AAWA,OAAO,MAAM;EAACM;AAAD,IAAYH,SAAS,CAACQ,OAA5B;AACP,eAAeR,SAAS,CAACS,OAAzB"},"metadata":{},"sourceType":"module"}