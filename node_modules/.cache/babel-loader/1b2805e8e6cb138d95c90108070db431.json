{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; //stateの型を記述する\n\nlet arr = localStorage.getItem('cartItems');\nconst initialState = {\n  cartItems: [],\n  cartShow: [],\n  totalPrice: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: (state, action) => {\n      let current = [{ ...state.cartItems\n      }];\n\n      if (arr !== null) {\n        current = JSON.parse(arr);\n      }\n\n      current.push(action.payload);\n      let cartArray = JSON.stringify(current);\n      localStorage.setItem('cartItems', cartArray);\n      arr = localStorage.getItem('cartItems');\n      state.cartItems = arr;\n      window.location.href = '/ec-demo/'; //  window.location.reload();\n\n      alert('カートへ追加が完了しました。');\n    },\n    removeAll: state => {\n      state.cartItems = [];\n      localStorage.setItem('cartItems', JSON.stringify(state.cartItems));\n      window.location.href = '/ec-demo/';\n      window.location.reload();\n    },\n    removeItem: (state, action) => {\n      const itemId = action.payload;\n      state.cartShow = state.cartShow.filter(item => item.id !== itemId);\n      localStorage.setItem('cartItems', JSON.stringify(state.cartShow));\n      window.location.reload();\n    },\n    handleCart: state => {\n      arr = localStorage.getItem('cartItems');\n\n      if (arr !== null) {\n        state.cartItems = JSON.parse(arr); // 重複表示回避\n\n        let map = new Map(state.cartItems.map(o => [o.id, o]));\n        state.cartShow = Array.from(map.values());\n      }\n    },\n    handleTotalAmount: state => {\n      let current = [{ ...state.cartItems\n      }];\n\n      if (arr !== null) {\n        current = JSON.parse(arr);\n      }\n\n      state.totalAmount = current.length;\n    },\n    handleTotalPrice: state => {\n      let total = 0;\n      state.cartItems.forEach(item => {\n        total += item.price;\n      }); //新しい状態に更新\n\n      state.totalPrice = total;\n    }\n  }\n});\nexport const {\n  addCart,\n  removeAll,\n  removeItem,\n  handleCart,\n  handleTotalAmount,\n  handleTotalPrice\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","arr","localStorage","getItem","initialState","cartItems","cartShow","totalPrice","totalAmount","cartSlice","name","reducers","addCart","state","action","current","JSON","parse","push","payload","cartArray","stringify","setItem","window","location","href","alert","removeAll","reload","removeItem","itemId","filter","item","id","handleCart","map","Map","o","Array","from","values","handleTotalAmount","length","handleTotalPrice","total","forEach","price","actions","reducer"],"sources":["/Users/yonekawatakashinari/Desktop/js-practice/yone-ec-site/src/redux/cart/cartSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n//stateの型を記述する\nexport interface apiState {\n  cartItems: {\n    id: number | string;\n    title: string;\n    price: number;\n    image: string;\n  }[];\n  cartShow: {\n    id: number | string;\n    title: string;\n    price: number;\n    image: string;\n  }[];\n  totalPrice: number\n  totalAmount: number;\n}\n\nlet arr:any= localStorage.getItem('cartItems') ;\n\n\nconst initialState:apiState  = {\n  cartItems: [],\n  cartShow: [],\n  totalPrice: 0,\n  totalAmount: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart:  (state, action) => {\n\n      let current = [{...state.cartItems}]\n      if(arr !== null){\n        current= JSON.parse(arr);       \n      }\n      current.push(action.payload);\n      let cartArray = JSON.stringify(current);\n      localStorage.setItem('cartItems', cartArray);\n      arr = localStorage.getItem('cartItems');\n      state.cartItems = arr;\n      window.location.href = '/ec-demo/';\n      //  window.location.reload();\n      alert('カートへ追加が完了しました。')\n\n    },\n    removeAll: (state) => {\n      state.cartItems = [];\n      localStorage.setItem('cartItems', JSON.stringify(state.cartItems));\n      window.location.href = '/ec-demo/';\n      window.location.reload();\n\n    },\n    removeItem:(state, action) => {\n      const itemId = action.payload;\n      state.cartShow = state.cartShow.filter((item) => item.id !== itemId);\n      localStorage.setItem('cartItems', JSON.stringify(state.cartShow));\n      window.location.reload();\n\n    },\n    handleCart:(state) => {\n      arr = localStorage.getItem('cartItems');\n      if(arr !== null){\n        state.cartItems = JSON.parse(arr);\n\n        // 重複表示回避\n        let map = new Map(state.cartItems.map((o) => [o.id, o]));\n        state.cartShow = Array.from(map.values())\n      }\n      \n    },\n    handleTotalAmount: (state) => {\n      let current = [{...state.cartItems}]\n      if(arr !== null){current= JSON.parse(arr);}\n        state.totalAmount = current.length;\n    },\n    handleTotalPrice: (state) => {\n      let total:number = 0;\n      state.cartItems.forEach((item) => {\n        total += item.price;\n      });\n      //新しい状態に更新\n      state.totalPrice = total;\n    }\n  },\n});\n\nexport const { addCart, removeAll ,removeItem, handleCart,handleTotalAmount,handleTotalPrice } = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}