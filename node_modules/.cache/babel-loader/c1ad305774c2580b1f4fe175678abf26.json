{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { collection, doc, getDocs, setDoc } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\n// let cartItems: apiArray[] = [];\nconst initialState = {\n  cartItems: [],\n  totalPrice: \"\"\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    handleCart: state => {\n      const cartCollectionRef = collection(db, \"cart\");\n      getDocs(cartCollectionRef).then(querySnapshot => {\n        state.cartItems = querySnapshot.docs.map(doc => ({ ...doc.data(),\n          id: doc.id\n        }));\n      });\n    },\n    addCart: async (state, action) => {\n      // state.cartItems = cartItems;\n      const cartDocumentRef = doc(collection(db, \"cart\"));\n      const newCartItem = action.payload;\n      await setDoc(cartDocumentRef, newCartItem); //   await setDoc(cartCollectionRef, state.newCartItem);\n      //   console.log(cartDocumentRef);\n    },\n    removeAll: state => {\n      // state.cartItems = cartItems;\n      state.cartItems = [];\n    },\n    removeItem: (state, action) => {\n      // state.cartItems = cartItems;\n      const itemId = action.payload;\n      state.cartitems = state.cartItems.filter(item => item.id === itemId);\n    },\n    handleTotalPrice: state => {\n      let total = 0; // state.cartItems = cartItems;\n\n      state.cartItems.foreach(item => {\n        total += item.price;\n      });\n      state.totalPrice = total;\n    }\n  }\n});\nexport const {\n  handleCart,\n  addCart,\n  removeAll,\n  removeItem,\n  handleTotalPrice\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","collection","doc","getDocs","setDoc","db","initialState","cartItems","totalPrice","cartSlice","name","reducers","handleCart","state","cartCollectionRef","then","querySnapshot","docs","map","data","id","addCart","action","cartDocumentRef","newCartItem","payload","removeAll","removeItem","itemId","cartitems","filter","item","handleTotalPrice","total","foreach","price","actions","reducer"],"sources":["/Users/yonekawatakashinari/Desktop/js-practice/yone-ec-siteのコピー/src/redux/cart/cartSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { collection, doc, getDocs, setDoc } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\n\ntype apiArray = {\n  id: number | string;\n  // title: string;\n  // price: number;\n  // image: string;\n};\n\n// let cartItems: apiArray[] = [];\n\nconst initialState: any = {\n  cartItems: [],\n  totalPrice: \"\",\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    handleCart: (state) => {\n      const cartCollectionRef = collection(db, \"cart\");\n      getDocs(cartCollectionRef).then((querySnapshot) => {\n        state.cartItems = querySnapshot.docs.map((doc) => ({\n          ...doc.data(),\n          id: doc.id,\n        }));\n      });\n    },\n    addCart: async (state, action) => {\n      // state.cartItems = cartItems;\n      const cartDocumentRef = doc(collection(db, \"cart\"));\n      const newCartItem = action.payload;\n      await setDoc(cartDocumentRef, newCartItem);\n      //   await setDoc(cartCollectionRef, state.newCartItem);\n\n      //   console.log(cartDocumentRef);\n    },\n    removeAll: (state) => {\n      // state.cartItems = cartItems;\n      state.cartItems = [];\n    },\n    removeItem: (state, action) => {\n      // state.cartItems = cartItems;\n      const itemId = action.payload;\n      state.cartitems = state.cartItems.filter(\n        (item: apiArray) => item.id === itemId\n      );\n    },\n    handleTotalPrice: (state) => {\n      let total = 0;\n      // state.cartItems = cartItems;\n      state.cartItems.foreach((item: any) => {\n        total += item.price;\n      });\n      state.totalPrice = total;\n    },\n  },\n});\n\nexport const { handleCart, addCart, removeAll, removeItem, handleTotalPrice } =\n  cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,OAA1B,EAAmCC,MAAnC,QAAiD,oBAAjD;AACA,SAASC,EAAT,QAAmB,gBAAnB;AASA;AAEA,MAAMC,YAAiB,GAAG;EACxBC,SAAS,EAAE,EADa;EAExBC,UAAU,EAAE;AAFY,CAA1B;AAKA,MAAMC,SAAS,GAAGT,WAAW,CAAC;EAC5BU,IAAI,EAAE,MADsB;EAE5BJ,YAF4B;EAG5BK,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAD,IAAW;MACrB,MAAMC,iBAAiB,GAAGb,UAAU,CAACI,EAAD,EAAK,MAAL,CAApC;MACAF,OAAO,CAACW,iBAAD,CAAP,CAA2BC,IAA3B,CAAiCC,aAAD,IAAmB;QACjDH,KAAK,CAACN,SAAN,GAAkBS,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAwBhB,GAAD,KAAU,EACjD,GAAGA,GAAG,CAACiB,IAAJ,EAD8C;UAEjDC,EAAE,EAAElB,GAAG,CAACkB;QAFyC,CAAV,CAAvB,CAAlB;MAID,CALD;IAMD,CATO;IAURC,OAAO,EAAE,OAAOR,KAAP,EAAcS,MAAd,KAAyB;MAChC;MACA,MAAMC,eAAe,GAAGrB,GAAG,CAACD,UAAU,CAACI,EAAD,EAAK,MAAL,CAAX,CAA3B;MACA,MAAMmB,WAAW,GAAGF,MAAM,CAACG,OAA3B;MACA,MAAMrB,MAAM,CAACmB,eAAD,EAAkBC,WAAlB,CAAZ,CAJgC,CAKhC;MAEA;IACD,CAlBO;IAmBRE,SAAS,EAAGb,KAAD,IAAW;MACpB;MACAA,KAAK,CAACN,SAAN,GAAkB,EAAlB;IACD,CAtBO;IAuBRoB,UAAU,EAAE,CAACd,KAAD,EAAQS,MAAR,KAAmB;MAC7B;MACA,MAAMM,MAAM,GAAGN,MAAM,CAACG,OAAtB;MACAZ,KAAK,CAACgB,SAAN,GAAkBhB,KAAK,CAACN,SAAN,CAAgBuB,MAAhB,CACfC,IAAD,IAAoBA,IAAI,CAACX,EAAL,KAAYQ,MADhB,CAAlB;IAGD,CA7BO;IA8BRI,gBAAgB,EAAGnB,KAAD,IAAW;MAC3B,IAAIoB,KAAK,GAAG,CAAZ,CAD2B,CAE3B;;MACApB,KAAK,CAACN,SAAN,CAAgB2B,OAAhB,CAAyBH,IAAD,IAAe;QACrCE,KAAK,IAAIF,IAAI,CAACI,KAAd;MACD,CAFD;MAGAtB,KAAK,CAACL,UAAN,GAAmByB,KAAnB;IACD;EArCO;AAHkB,CAAD,CAA7B;AA4CA,OAAO,MAAM;EAAErB,UAAF;EAAcS,OAAd;EAAuBK,SAAvB;EAAkCC,UAAlC;EAA8CK;AAA9C,IACXvB,SAAS,CAAC2B,OADL;AAEP,eAAe3B,SAAS,CAAC4B,OAAzB"},"metadata":{},"sourceType":"module"}