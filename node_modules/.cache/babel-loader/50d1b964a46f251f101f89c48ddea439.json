{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet arr = localStorage.getItem('cartItems');\nconst initialState = {\n  cartItems: [],\n  totalPrice: '',\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: async (state, action) => {\n      // console.log(localStorage.getItem('cartItems'));\n      let current = [{ ...state.cartItems\n      }];\n\n      if (arr !== null) {\n        current = JSON.parse(arr);\n      }\n\n      await current.push(action.payload);\n      let cartArray = JSON.stringify(current);\n      localStorage.setItem('cartItems', cartArray);\n      arr = localStorage.getItem('cartItems');\n      state.cartItems = arr;\n    },\n    removeAll: async state => {\n      localStorage.clear();\n      state.cartItems = [];\n    },\n    removeItem: (state, action) => {},\n    handleCart: state => {\n      arr = localStorage.getItem('cartItems');\n\n      if (arr !== null) {\n        state.cartItems = JSON.parse(arr);\n        state.cartItems.shift();\n      }\n    },\n    handleTotalAmount: state => {\n      let current = [{ ...state.cartItems\n      }];\n\n      if (arr !== null) {\n        current = JSON.parse(arr);\n      } // let totalAmount = 0;\n      // let totalPrice = 0;\n      // console.log(current);\n      // current.forEach((item:any) => {\n      //    totalAmount += item.length;\n      //   });\n\n\n      state.totalAmount = current.length;\n    },\n    handleTotalPrice: state => {\n      let total = 0;\n      state.cartItems.forEach(item => {\n        total += item.price;\n      }); //新しい状態に更新\n\n      state.totalPrice = total;\n    }\n  }\n});\nexport const {\n  addCart,\n  removeAll,\n  removeItem,\n  handleCart,\n  handleTotalAmount,\n  handleTotalPrice\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","arr","localStorage","getItem","initialState","cartItems","totalPrice","totalAmount","cartSlice","name","reducers","addCart","state","action","current","JSON","parse","push","payload","cartArray","stringify","setItem","removeAll","clear","removeItem","handleCart","shift","handleTotalAmount","length","handleTotalPrice","total","forEach","item","price","actions","reducer"],"sources":["/Users/yonekawatakashinari/Desktop/js-practice/yone-ec-site/src/redux/cart/cartSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\ntype apiArray = {\n  id: number | string;\n  // title: string;\n  // price: number;\n  // image: string;\n};\n\n\n\nlet arr:any = localStorage.getItem('cartItems');\n\n\n\nconst initialState: any = {\n  cartItems: [],\n  totalPrice: '',\n  totalAmount: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: async (state, action) => {\n\n      // console.log(localStorage.getItem('cartItems'));\n      let current = [{...state.cartItems}]\n      if(arr !== null){\n        current= JSON.parse(arr);       \n      }\n      await current.push(action.payload);\n      \n      let cartArray:any = JSON.stringify(current);\n      localStorage.setItem('cartItems', cartArray);\n      arr = localStorage.getItem('cartItems');\n      state.cartItems = arr;\n      \n\n      \n\n\n    },\n    removeAll: async (state) => {\n      localStorage.clear();\n      state.cartItems = [];\n    },\n    removeItem:(state, action) => {\n    },\n    handleCart:(state) => {\n      arr = localStorage.getItem('cartItems');\n      if(arr !== null){\n        state.cartItems = JSON.parse(arr);\n        state.cartItems.shift();\n      }\n    },\n    handleTotalAmount: (state) => {\n      let current = [{...state.cartItems}]\n      if(arr !== null){current= JSON.parse(arr);}\n      // let totalAmount = 0;\n      // let totalPrice = 0;\n      // console.log(current);\n      \n      // current.forEach((item:any) => {\n      //    totalAmount += item.length;\n      //   });\n        state.totalAmount = current.length;\n\n    },\n    handleTotalPrice: (state) => {\n      let total = 0;\n      state.cartItems.forEach((item:any) => {\n        total += item.price;\n      });\n      //新しい状態に更新\n      state.totalPrice = total;\n    }\n  },\n});\n\nexport const { addCart, removeAll ,removeItem, handleCart,handleTotalAmount,handleTotalPrice } = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAWA,IAAIC,GAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd;AAIA,MAAMC,YAAiB,GAAG;EACxBC,SAAS,EAAE,EADa;EAExBC,UAAU,EAAE,EAFY;EAGxBC,WAAW,EAAE;AAHW,CAA1B;AAMA,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,MADsB;EAE5BL,YAF4B;EAG5BM,QAAQ,EAAE;IACRC,OAAO,EAAE,OAAOC,KAAP,EAAcC,MAAd,KAAyB;MAEhC;MACA,IAAIC,OAAO,GAAG,CAAC,EAAC,GAAGF,KAAK,CAACP;MAAV,CAAD,CAAd;;MACA,IAAGJ,GAAG,KAAK,IAAX,EAAgB;QACda,OAAO,GAAEC,IAAI,CAACC,KAAL,CAAWf,GAAX,CAAT;MACD;;MACD,MAAMa,OAAO,CAACG,IAAR,CAAaJ,MAAM,CAACK,OAApB,CAAN;MAEA,IAAIC,SAAa,GAAGJ,IAAI,CAACK,SAAL,CAAeN,OAAf,CAApB;MACAZ,YAAY,CAACmB,OAAb,CAAqB,WAArB,EAAkCF,SAAlC;MACAlB,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAN;MACAS,KAAK,CAACP,SAAN,GAAkBJ,GAAlB;IAMD,CAnBO;IAoBRqB,SAAS,EAAE,MAAOV,KAAP,IAAiB;MAC1BV,YAAY,CAACqB,KAAb;MACAX,KAAK,CAACP,SAAN,GAAkB,EAAlB;IACD,CAvBO;IAwBRmB,UAAU,EAAC,CAACZ,KAAD,EAAQC,MAAR,KAAmB,CAC7B,CAzBO;IA0BRY,UAAU,EAAEb,KAAD,IAAW;MACpBX,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAN;;MACA,IAAGF,GAAG,KAAK,IAAX,EAAgB;QACdW,KAAK,CAACP,SAAN,GAAkBU,IAAI,CAACC,KAAL,CAAWf,GAAX,CAAlB;QACAW,KAAK,CAACP,SAAN,CAAgBqB,KAAhB;MACD;IACF,CAhCO;IAiCRC,iBAAiB,EAAGf,KAAD,IAAW;MAC5B,IAAIE,OAAO,GAAG,CAAC,EAAC,GAAGF,KAAK,CAACP;MAAV,CAAD,CAAd;;MACA,IAAGJ,GAAG,KAAK,IAAX,EAAgB;QAACa,OAAO,GAAEC,IAAI,CAACC,KAAL,CAAWf,GAAX,CAAT;MAA0B,CAFf,CAG5B;MACA;MACA;MAEA;MACA;MACA;;;MACEW,KAAK,CAACL,WAAN,GAAoBO,OAAO,CAACc,MAA5B;IAEH,CA7CO;IA8CRC,gBAAgB,EAAGjB,KAAD,IAAW;MAC3B,IAAIkB,KAAK,GAAG,CAAZ;MACAlB,KAAK,CAACP,SAAN,CAAgB0B,OAAhB,CAAyBC,IAAD,IAAc;QACpCF,KAAK,IAAIE,IAAI,CAACC,KAAd;MACD,CAFD,EAF2B,CAK3B;;MACArB,KAAK,CAACN,UAAN,GAAmBwB,KAAnB;IACD;EArDO;AAHkB,CAAD,CAA7B;AA4DA,OAAO,MAAM;EAAEnB,OAAF;EAAWW,SAAX;EAAsBE,UAAtB;EAAkCC,UAAlC;EAA6CE,iBAA7C;EAA+DE;AAA/D,IAAoFrB,SAAS,CAAC0B,OAApG;AACP,eAAe1B,SAAS,CAAC2B,OAAzB"},"metadata":{},"sourceType":"module"}