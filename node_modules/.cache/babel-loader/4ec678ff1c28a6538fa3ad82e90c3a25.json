{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { collection, doc, Firestore, getDocs, setDoc } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nlet cartItems = [];\nconst cartCollectionRef = collection(db, \"cart\");\ngetDocs(cartCollectionRef).then(querySnapshot => {\n  cartItems = querySnapshot.docs.map(doc => ({ ...doc.data(),\n    id: doc.id\n  }));\n});\nconst initialState = {\n  cartItems: [],\n  totalPrice: ''\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: async (state, action) => {\n      state.cartItems = cartItems;\n      const cartDocumentRef = doc(collection(db, \"cart\"));\n      const newCartItem = action.payload;\n      await setDoc(cartDocumentRef, newCartItem); //   await setDoc(cartCollectionRef, state.newCartItem);\n      //   console.log(cartDocumentRef);\n    },\n    removeAll: state => {\n      const docRef = doc(Firestore);\n      state.cartItems = cartItems;\n      cartItems = [];\n    },\n    removeItem: (state, action) => {\n      state.cartItems = cartItems;\n      const itemId = action.payload;\n      state.cartitems = state.cartItems.filter(item => item.id === itemId);\n    },\n    handleTotalPrice: state => {\n      let total = 0;\n      state.cartItems = cartItems;\n      state.cartItems.foreach(item => {\n        total += item.price;\n      });\n      state.totalPrice = total;\n      console.log(state.totalPrice);\n    }\n  }\n});\nexport const {\n  addCart,\n  removeAll,\n  removeItem,\n  handleTotalPrice\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","collection","doc","Firestore","getDocs","setDoc","db","cartItems","cartCollectionRef","then","querySnapshot","docs","map","data","id","initialState","totalPrice","cartSlice","name","reducers","addCart","state","action","cartDocumentRef","newCartItem","payload","removeAll","docRef","removeItem","itemId","cartitems","filter","item","handleTotalPrice","total","foreach","price","console","log","actions","reducer"],"sources":["/Users/yonekawatakashinari/Desktop/js-practice/yone-ec-siteのコピー/src/redux/cart/cartSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { collection, doc, Firestore, getDocs, setDoc } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\n\ntype apiArray = {\n  id: number | string;\n  // title: string;\n  // price: number;\n  // image: string;\n};\n\nlet cartItems: apiArray[] = [];\n\n\nconst cartCollectionRef = collection(db, \"cart\");\ngetDocs(cartCollectionRef).then((querySnapshot) => {\n  cartItems = querySnapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\n  \n});\n\nconst initialState: any = {\n  cartItems: [],\n  totalPrice: '',\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: async (state, action) => {\n      \n      state.cartItems = cartItems;\n      const cartDocumentRef = doc(collection(db, \"cart\"));\n      const newCartItem = action.payload;\n      await setDoc(cartDocumentRef, newCartItem);\n      //   await setDoc(cartCollectionRef, state.newCartItem);\n\n    //   console.log(cartDocumentRef);\n    },\n    removeAll: (state) => {\n      const docRef = doc(Firestore)\n      state.cartItems = cartItems;\n      cartItems = [];\n    },\n    removeItem:(state, action) => {\n      state.cartItems = cartItems;\n      const itemId = action.payload;\n      state.cartitems = state.cartItems.filter((item:apiArray) => item.id === itemId)\n    },\n    handleTotalPrice: (state) => {\n      let total = 0;\n      state.cartItems = cartItems;\n      state.cartItems.foreach((item:any) => {\n        total += item.price;\n      });\n      state.totalPrice = total;\n      console.log(state.totalPrice);\n      \n    }\n  },\n});\n\nexport const { addCart, removeAll ,removeItem, handleTotalPrice } = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,MAA9C,QAA4D,oBAA5D;AACA,SAASC,EAAT,QAAmB,gBAAnB;AASA,IAAIC,SAAqB,GAAG,EAA5B;AAGA,MAAMC,iBAAiB,GAAGP,UAAU,CAACK,EAAD,EAAK,MAAL,CAApC;AACAF,OAAO,CAACI,iBAAD,CAAP,CAA2BC,IAA3B,CAAiCC,aAAD,IAAmB;EACjDH,SAAS,GAAGG,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAwBV,GAAD,KAAU,EAAE,GAAGA,GAAG,CAACW,IAAJ,EAAL;IAAiBC,EAAE,EAAEZ,GAAG,CAACY;EAAzB,CAAV,CAAvB,CAAZ;AAED,CAHD;AAKA,MAAMC,YAAiB,GAAG;EACxBR,SAAS,EAAE,EADa;EAExBS,UAAU,EAAE;AAFY,CAA1B;AAKA,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EAC5BkB,IAAI,EAAE,MADsB;EAE5BH,YAF4B;EAG5BI,QAAQ,EAAE;IACRC,OAAO,EAAE,OAAOC,KAAP,EAAcC,MAAd,KAAyB;MAEhCD,KAAK,CAACd,SAAN,GAAkBA,SAAlB;MACA,MAAMgB,eAAe,GAAGrB,GAAG,CAACD,UAAU,CAACK,EAAD,EAAK,MAAL,CAAX,CAA3B;MACA,MAAMkB,WAAW,GAAGF,MAAM,CAACG,OAA3B;MACA,MAAMpB,MAAM,CAACkB,eAAD,EAAkBC,WAAlB,CAAZ,CALgC,CAMhC;MAEF;IACC,CAVO;IAWRE,SAAS,EAAGL,KAAD,IAAW;MACpB,MAAMM,MAAM,GAAGzB,GAAG,CAACC,SAAD,CAAlB;MACAkB,KAAK,CAACd,SAAN,GAAkBA,SAAlB;MACAA,SAAS,GAAG,EAAZ;IACD,CAfO;IAgBRqB,UAAU,EAAC,CAACP,KAAD,EAAQC,MAAR,KAAmB;MAC5BD,KAAK,CAACd,SAAN,GAAkBA,SAAlB;MACA,MAAMsB,MAAM,GAAGP,MAAM,CAACG,OAAtB;MACAJ,KAAK,CAACS,SAAN,GAAkBT,KAAK,CAACd,SAAN,CAAgBwB,MAAhB,CAAwBC,IAAD,IAAmBA,IAAI,CAAClB,EAAL,KAAYe,MAAtD,CAAlB;IACD,CApBO;IAqBRI,gBAAgB,EAAGZ,KAAD,IAAW;MAC3B,IAAIa,KAAK,GAAG,CAAZ;MACAb,KAAK,CAACd,SAAN,GAAkBA,SAAlB;MACAc,KAAK,CAACd,SAAN,CAAgB4B,OAAhB,CAAyBH,IAAD,IAAc;QACpCE,KAAK,IAAIF,IAAI,CAACI,KAAd;MACD,CAFD;MAGAf,KAAK,CAACL,UAAN,GAAmBkB,KAAnB;MACAG,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACL,UAAlB;IAED;EA9BO;AAHkB,CAAD,CAA7B;AAqCA,OAAO,MAAM;EAAEI,OAAF;EAAWM,SAAX;EAAsBE,UAAtB;EAAkCK;AAAlC,IAAuDhB,SAAS,CAACsB,OAAvE;AACP,eAAetB,SAAS,CAACuB,OAAzB"},"metadata":{},"sourceType":"module"}