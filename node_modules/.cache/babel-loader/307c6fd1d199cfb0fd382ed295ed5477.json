{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { useSelector as rawUseSelector } from \"react-redux\";\nimport itemReducer from './redux/item/itemSlice';\nimport cartReducer from './redux/cart/cartSlice';\nexport const store = configureStore({\n  reducer: {\n    items: itemReducer,\n    cart: cartReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\nexport const useSelector = rawUseSelector;","map":{"version":3,"names":["configureStore","useSelector","rawUseSelector","itemReducer","cartReducer","store","reducer","items","cart","middleware","getDefaultMiddleware","serializableCheck"],"sources":["/Users/yonekawatakashinari/Desktop/転職ポートフォリオ/ec-site/src/store.tsx"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { useSelector as rawUseSelector ,TypedUseSelectorHook } from \"react-redux\";\nimport itemReducer from './redux/item/itemSlice'\nimport cartReducer from './redux/cart/cartSlice'\n\n\nexport const store = configureStore({\n    reducer: {\n        items: itemReducer,\n        cart: cartReducer,\n    },\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n})\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>\nexport const useSelector: TypedUseSelectorHook<RootState> = rawUseSelector; "],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAW,IAAIC,cAAxB,QAAoE,aAApE;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAGA,OAAO,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAChCM,OAAO,EAAE;IACLC,KAAK,EAAEJ,WADF;IAELK,IAAI,EAAEJ;EAFD,CADuB;EAKhCK,UAAU,EAAGC,oBAAD,IACZA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;EADA,CAAD;AANY,CAAD,CAA5B;AAaP,OAAO,MAAMV,WAA4C,GAAGC,cAArD"},"metadata":{},"sourceType":"module"}