{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet arr = localStorage.getItem('cartItems');\n\nconst isEmpty = obj => {\n  return Object.keys(obj).length === 0;\n};\n\nconst initialState = {\n  cartItems: [],\n  cartShow: [],\n  totalPrice: '',\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: async (state, action) => {\n      // console.log(localStorage.getItem('cartItems'));\n      let current = [{ ...state.cartItems\n      }];\n\n      if (arr !== null) {\n        current = JSON.parse(arr);\n      }\n\n      current.push(action.payload);\n      let cartArray = JSON.stringify(current);\n      localStorage.setItem('cartItems', cartArray);\n      arr = localStorage.getItem('cartItems');\n      state.cartItems = arr;\n      await window.location.reload();\n      alert('カートへ追加が完了しました。');\n    },\n    removeAll: async state => {\n      localStorage.clear();\n      state.cartItems = [];\n      window.location.reload();\n    },\n    removeItem: (state, action) => {\n      const itemId = action.payload;\n      state.cartShow = state.cartShow.filter(item => item.id !== itemId);\n      localStorage.setItem('cartItems', JSON.stringify(state.cartShow));\n      window.location.reload();\n    },\n    handleCart: state => {\n      arr = localStorage.getItem('cartItems');\n\n      if (arr !== null) {\n        state.cartItems = JSON.parse(arr); // 重複表示回避\n\n        let map = new Map(state.cartItems.map(o => [o.id, o]));\n        state.cartShow = Array.from(map.values());\n      }\n\n      if (state.cartItems[0].length === 0) {\n        state.cartItems.shift();\n      }\n    },\n    handleTotalAmount: state => {\n      let current = [{ ...state.cartItems\n      }];\n\n      if (arr !== null) {\n        current = JSON.parse(arr);\n      } // let totalAmount = 0;\n      // let totalPrice = 0;\n      // console.log(current);\n      // current.forEach((item:any) => {\n      //    totalAmount += item.length;\n      //   });\n\n\n      state.totalAmount = current.length;\n    },\n    handleTotalPrice: state => {\n      let total = 0;\n      state.cartItems.forEach(item => {\n        total += item.price;\n      }); //新しい状態に更新\n\n      state.totalPrice = total;\n    }\n  }\n});\nexport const {\n  addCart,\n  removeAll,\n  removeItem,\n  handleCart,\n  handleTotalAmount,\n  handleTotalPrice\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","arr","localStorage","getItem","isEmpty","obj","Object","keys","length","initialState","cartItems","cartShow","totalPrice","totalAmount","cartSlice","name","reducers","addCart","state","action","current","JSON","parse","push","payload","cartArray","stringify","setItem","window","location","reload","alert","removeAll","clear","removeItem","itemId","filter","item","id","handleCart","map","Map","o","Array","from","values","shift","handleTotalAmount","handleTotalPrice","total","forEach","price","actions","reducer"],"sources":["/Users/yonekawatakashinari/Desktop/js-practice/yone-ec-site/src/redux/cart/cartSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\ntype apiArray = {\n  id: number | string;\n  // title: string;\n  // price: number;\n  // image: string;\n};\n\n\n\nlet arr:any = localStorage.getItem('cartItems');\n\nconst isEmpty = (obj) => {\n  return Object.keys(obj).length === 0\n}\n\nconst initialState: any = {\n  cartItems: [],\n  cartShow: [],\n  totalPrice: '',\n  totalAmount: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: async (state, action) => {\n\n      // console.log(localStorage.getItem('cartItems'));\n      let current = [{...state.cartItems}]\n      if(arr !== null){\n        current= JSON.parse(arr);       \n      }\n      current.push(action.payload);\n      let cartArray:any = JSON.stringify(current);\n      localStorage.setItem('cartItems', cartArray);\n      arr = localStorage.getItem('cartItems');\n      state.cartItems = arr;\n      await window.location.reload();\n      alert('カートへ追加が完了しました。')\n\n    },\n    removeAll: async (state) => {\n      localStorage.clear();\n      state.cartItems = [];\n      window.location.reload();\n\n    },\n    removeItem:(state, action) => {\n      const itemId = action.payload;\n      state.cartShow = state.cartShow.filter((item:any) => item.id !== itemId);\n      localStorage.setItem('cartItems', JSON.stringify(state.cartShow));\n      window.location.reload();\n\n    },\n    handleCart:(state) => {\n      arr = localStorage.getItem('cartItems');\n      if(arr !== null){\n        state.cartItems = JSON.parse(arr);\n\n\n        // 重複表示回避\n        let map = new Map(state.cartItems.map((o:any) => [o.id, o]));\n        state.cartShow = Array.from(map.values())\n      }\n      \n      if(state.cartItems[0].length === 0){\n        state.cartItems.shift();\n      }\n    },\n    handleTotalAmount: (state) => {\n      let current = [{...state.cartItems}]\n      if(arr !== null){current= JSON.parse(arr);}\n      // let totalAmount = 0;\n      // let totalPrice = 0;\n      // console.log(current);\n      \n      // current.forEach((item:any) => {\n      //    totalAmount += item.length;\n      //   });\n        state.totalAmount = current.length;\n\n    },\n    handleTotalPrice: (state) => {\n      let total = 0;\n      state.cartItems.forEach((item:any) => {\n        total += item.price;\n      });\n      //新しい状態に更新\n      state.totalPrice = total;\n    }\n  },\n});\n\nexport const { addCart, removeAll ,removeItem, handleCart,handleTotalAmount,handleTotalPrice } = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}