{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const getItems = createAsyncThunk('items/getItems', async () => {\n  return await fetch('https://fakestoreapi.com/products').then(res => res.json());\n});\nexport const getDetail = createAsyncThunk('items/getDetail', async id => {\n  return await fetch(`https://fakestoreapi.com/products/${id}`).then(res => res.json());\n});\nconst initialState = {\n  items: [],\n  detail: [],\n  maxPrice: 100000,\n  minPrice: 0\n};\nconst itemSlice = createSlice({\n  name: \"items\",\n  initialState,\n  reducers: {\n    handleMaxPrice: (state, action) => {\n      let maxPriceValue = Number(action.payload);\n\n      if (state.minPrice + 1000 > maxPriceValue) {\n        return;\n      }\n\n      state.maxPrice = maxPriceValue;\n      console.log(state.maxPrice);\n    }\n  },\n  extraReducers: {\n    [getItems.fulfilled]: (state, action) => {\n      state.items = action.payload;\n    },\n    [getDetail.fulfilled]: (state, action) => {\n      state.detail = action.payload;\n    }\n  }\n});\nexport default itemSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getItems","fetch","then","res","json","getDetail","id","initialState","items","detail","maxPrice","minPrice","itemSlice","name","reducers","handleMaxPrice","state","action","maxPriceValue","Number","payload","console","log","extraReducers","fulfilled","reducer"],"sources":["/Users/yonekawatakashinari/Desktop/js-practice/yone-ec-siteのコピー/src/redux/item/itemSlice.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const getItems:any = createAsyncThunk('items/getItems', async () => {\n    return await fetch('https://fakestoreapi.com/products').then((res) =>\n      res.json()\n    );\n  });\n\n  export const getDetail:any = createAsyncThunk('items/getDetail', async (id: string | undefined) => {\n    return await fetch(`https://fakestoreapi.com/products/${id}`).then((res) =>\n      res.json()\n    );\n  });\n\nconst initialState = {\n  items: [],\n  detail: [],\n  maxPrice:100000,\n  minPrice:0,\n};\n\nconst itemSlice = createSlice({\n  name: \"items\",\n  initialState,\n  reducers:{\n    handleMaxPrice: (state, action) => {\n      let maxPriceValue = Number(action.payload);\n      if(state.minPrice + 1000 > maxPriceValue){\n        return\n      }\n      state.maxPrice = maxPriceValue;\n      console.log(state.maxPrice);\n      \n    },\n  },\n  extraReducers: {\n    [getItems.fulfilled]: (state:any, action:any) => {\n      state.items = action.payload;\n    },\n    [getDetail.fulfilled]: (state:any, action:any) => {\n        state.detail = action.payload;\n    },\n  },\n});\n\n\n\nexport default itemSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,QAAY,GAAGF,gBAAgB,CAAC,gBAAD,EAAmB,YAAY;EACvE,OAAO,MAAMG,KAAK,CAAC,mCAAD,CAAL,CAA2CC,IAA3C,CAAiDC,GAAD,IAC3DA,GAAG,CAACC,IAAJ,EADW,CAAb;AAGD,CAJyC,CAArC;AAML,OAAO,MAAMC,SAAa,GAAGP,gBAAgB,CAAC,iBAAD,EAAoB,MAAOQ,EAAP,IAAkC;EACjG,OAAO,MAAML,KAAK,CAAE,qCAAoCK,EAAG,EAAzC,CAAL,CAAiDJ,IAAjD,CAAuDC,GAAD,IACjEA,GAAG,CAACC,IAAJ,EADW,CAAb;AAGD,CAJ4C,CAAtC;AAMT,MAAMG,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,MAAM,EAAE,EAFW;EAGnBC,QAAQ,EAAC,MAHU;EAInBC,QAAQ,EAAC;AAJU,CAArB;AAOA,MAAMC,SAAS,GAAGb,WAAW,CAAC;EAC5Bc,IAAI,EAAE,OADsB;EAE5BN,YAF4B;EAG5BO,QAAQ,EAAC;IACPC,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACjC,IAAIC,aAAa,GAAGC,MAAM,CAACF,MAAM,CAACG,OAAR,CAA1B;;MACA,IAAGJ,KAAK,CAACL,QAAN,GAAiB,IAAjB,GAAwBO,aAA3B,EAAyC;QACvC;MACD;;MACDF,KAAK,CAACN,QAAN,GAAiBQ,aAAjB;MACAG,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACN,QAAlB;IAED;EATM,CAHmB;EAc5Ba,aAAa,EAAE;IACb,CAACvB,QAAQ,CAACwB,SAAV,GAAsB,CAACR,KAAD,EAAYC,MAAZ,KAA2B;MAC/CD,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACG,OAArB;IACD,CAHY;IAIb,CAACf,SAAS,CAACmB,SAAX,GAAuB,CAACR,KAAD,EAAYC,MAAZ,KAA2B;MAC9CD,KAAK,CAACP,MAAN,GAAeQ,MAAM,CAACG,OAAtB;IACH;EANY;AAda,CAAD,CAA7B;AA0BA,eAAeR,SAAS,CAACa,OAAzB"},"metadata":{},"sourceType":"module"}