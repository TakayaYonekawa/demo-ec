{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { collection, getDocs, setDoc } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\nlet cartItems = [];\nconst cartCollectionRef = collection(db, \"cart\");\ngetDocs(cartCollectionRef).then(querySnapshot => {\n  cartItems = querySnapshot.docs.map(doc => ({ ...doc.data(),\n    id: doc.id\n  }));\n});\nconst initialState = {\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: async (state, action) => {\n      state.cartItems = cartItems;\n      const newCartItem = action.payload;\n      await setDoc(cartCollectionRef, {\n        id: newCartItem.id,\n        title: newCartItem,\n        price: newCartItem,\n        image: string\n      }); // console.log(state.cartItems);\n    }\n  }\n});\nexport const {\n  addCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","collection","getDocs","setDoc","db","cartItems","cartCollectionRef","then","querySnapshot","docs","map","doc","data","id","initialState","cartSlice","name","reducers","addCart","state","action","newCartItem","payload","title","price","image","string","actions","reducer"],"sources":["/Users/yonekawatakashinari/Desktop/js-practice/yone-ec-siteのコピー/src/redux/cart/cartSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { collection, getDocs, setDoc } from \"firebase/firestore\";\nimport { db } from \"../../firebase\";\n\ntype apiArray = {\n  id: number | string;\n  // title: string;\n  // price: number;\n  // image: string;\n};\n\nlet cartItems: apiArray[] = [];\nconst cartCollectionRef = collection(db, \"cart\");\ngetDocs(cartCollectionRef).then((querySnapshot) => {\n  cartItems = querySnapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\n});\n\nconst initialState: any = {\n  cartItems: [],\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addCart: async (state, action) => {\n      state.cartItems = cartItems;\n      const newCartItem = action.payload;\n\n      await setDoc(cartCollectionRef, {\n        id: newCartItem.id,\n        title: newCartItem,\n        price: newCartItem,\n        image: string,\n      });\n      // console.log(state.cartItems);\n    },\n  },\n});\n\nexport const { addCart } = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,MAA9B,QAA4C,oBAA5C;AACA,SAASC,EAAT,QAAmB,gBAAnB;AASA,IAAIC,SAAqB,GAAG,EAA5B;AACA,MAAMC,iBAAiB,GAAGL,UAAU,CAACG,EAAD,EAAK,MAAL,CAApC;AACAF,OAAO,CAACI,iBAAD,CAAP,CAA2BC,IAA3B,CAAiCC,aAAD,IAAmB;EACjDH,SAAS,GAAGG,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAwBC,GAAD,KAAU,EAAE,GAAGA,GAAG,CAACC,IAAJ,EAAL;IAAiBC,EAAE,EAAEF,GAAG,CAACE;EAAzB,CAAV,CAAvB,CAAZ;AACD,CAFD;AAIA,MAAMC,YAAiB,GAAG;EACxBT,SAAS,EAAE;AADa,CAA1B;AAIA,MAAMU,SAAS,GAAGf,WAAW,CAAC;EAC5BgB,IAAI,EAAE,MADsB;EAE5BF,YAF4B;EAG5BG,QAAQ,EAAE;IACRC,OAAO,EAAE,OAAOC,KAAP,EAAcC,MAAd,KAAyB;MAChCD,KAAK,CAACd,SAAN,GAAkBA,SAAlB;MACA,MAAMgB,WAAW,GAAGD,MAAM,CAACE,OAA3B;MAEA,MAAMnB,MAAM,CAACG,iBAAD,EAAoB;QAC9BO,EAAE,EAAEQ,WAAW,CAACR,EADc;QAE9BU,KAAK,EAAEF,WAFuB;QAG9BG,KAAK,EAAEH,WAHuB;QAI9BI,KAAK,EAAEC;MAJuB,CAApB,CAAZ,CAJgC,CAUhC;IACD;EAZO;AAHkB,CAAD,CAA7B;AAmBA,OAAO,MAAM;EAAER;AAAF,IAAcH,SAAS,CAACY,OAA9B;AACP,eAAeZ,SAAS,CAACa,OAAzB"},"metadata":{},"sourceType":"module"}